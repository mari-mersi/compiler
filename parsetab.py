
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSASSIGN DIVIDE ID LPAREN MINUS MULTIPLY NUMBER PLUS RPAREN SEMICOLONstatements : statements SEMICOLON statement\n                  | statementstatement : ID ASSIGN expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expressionexpression : NUMBERexpression : IDexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUS'
    
_lr_action_items = {'ID':([0,4,5,9,11,12,13,14,15,],[3,3,7,7,7,7,7,7,7,]),'$end':([1,2,6,7,8,10,16,18,19,20,21,22,],[0,-2,-1,-9,-3,-8,-11,-4,-5,-6,-7,-10,]),'SEMICOLON':([1,2,6,7,8,10,16,18,19,20,21,22,],[4,-2,-1,-9,-3,-8,-11,-4,-5,-6,-7,-10,]),'ASSIGN':([3,],[5,]),'NUMBER':([5,9,11,12,13,14,15,],[10,10,10,10,10,10,10,]),'LPAREN':([5,9,11,12,13,14,15,],[11,11,11,11,11,11,11,]),'MINUS':([5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[9,-9,13,9,-8,9,9,9,9,9,-11,13,-4,-5,-6,-7,-10,]),'PLUS':([7,8,10,16,17,18,19,20,21,22,],[-9,12,-8,-11,12,-4,-5,-6,-7,-10,]),'MULTIPLY':([7,8,10,16,17,18,19,20,21,22,],[-9,14,-8,-11,14,14,14,-6,-7,-10,]),'DIVIDE':([7,8,10,16,17,18,19,20,21,22,],[-9,15,-8,-11,15,15,15,-6,-7,-10,]),'RPAREN':([7,10,16,17,18,19,20,21,22,],[-9,-8,-11,22,-4,-5,-6,-7,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,4,],[2,6,]),'expression':([5,9,11,12,13,14,15,],[8,16,17,18,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements SEMICOLON statement','statements',3,'p_statements','parser.py',13),
  ('statements -> statement','statements',1,'p_statements','parser.py',14),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','parser.py',21),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',25),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',26),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','parser.py',27),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',28),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',32),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',36),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parentheses','parser.py',40),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',48),
]
